# List needed services here
compose:
  db:
    image: mariadb
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
      MYSQL_RANDOM_ROOT_PASSWORD: 1

build:
  image: devgeniem/alpine-wordpress
  pull: true
  commands:
    # Our container mountpoint is fixed into /data/code
    # Symlink it to current directory
    - rm -r /data
    - mkdir /data
    - ln -s $PWD /data/code

    # Run container init scripts and start services in background
    - /init >> /dev/null &

    # Enforce coding practises by style checks
    - ./scripts/code-style.sh

    # Install php dependencies
    - ./scripts/install.sh

    # Wait for mysql and Install WordPress
    - ./scripts/seed.sh

    # Run the tests
    - ./scripts/test.sh

  environment:
    # Allow better caching of composer packages
    COMPOSER_HOME: /drone/.composer

    # Run processes as wordpress:web with these
    WP_UID: 100
    WP_GID: 101

    WP_ENV: testing

    WP_HOME: http://127.0.0.1
    WP_SITEURL: http://127.0.0.1

    # Drone maps service containers to localhost
    # Use mariadb container for testing
    # Use 127.0.0.1 over localhost because mysql will try socket instead if it's localhost
    DB_HOST: 127.0.0.1
    DB_PORT: 3306
    DB_NAME: wordpress
    DB_USER: wordpress
    DB_PASSWORD: wordpress

    SMTP_FROM: no-reply@wordpress.test

cache:
  mount:
    - /drone/.composer

##
# Change your slack url here
##

#notify:
#  slack:
#    webhook_url: YOUR_SLACK_URL_HERE
#    channel: drone
#    username: Drone CI
#    template: |
#      {{#success build.status}}
#        <{{ repo.link_url }}|{{ repo.full_name }}>: {{ build.author }} pushed succesfully to {{ build.branch }} branch.
#      {{else}}
#        <{{ repo.link_url }}|{{ repo.full_name }}>: {{ build.author }} broke {{ build.branch }} branch :(. <{{ build.link_url }}|See results>
#      {{/success}}

##
# Deploy to Geniem cluster
##

#deploy:
#  webhook:
#    debug: true
#    method: PUT
#    urls:
#      - http://172.17.0.1/geniem-api/v1/deploy/
#    content_type: application/json
#    template: '{"name": "{{repo.name}}", "git_branch": "{{ build.branch }}", "commit": "{{build.commit}}", "status": "{{build.status}}" }'
