##
# Docker for Mac is super slow for the filesync, So we'll use unison instead
##
sync:
  image: devgeniem/bg-sync
  volumes:
    - .:/source
  volumes_from:
    - web
  environment:
    SYNC_DESTINATION: '/var/www/project'
    SYNC_MAX_INOTIFY_WATCHES: '40000'
    SYNC_VERBOSE: '0'
    SYNC_EXTRA_UNISON_PROFILE_OPTS: 'ignore = Name {.docker}'
  privileged: true

##
# Web Server which runs nginx+php
##
web:
  image: devgeniem/wordpress-development-server
  ports:
    - 80
  links:
    - db
    - redis
    - elasticsearch
  volumes_from:
    - data
  volumes:
    # Sync files into this path with sync container
    - /var/www/project

    # Use volume for xdebug trace and profiling so we can use analysing in other containers
    - /tmp/xdebug

    # In production uploads will be in /data/uploads/
    # This way let the container see them like in production
    - ./.docker/uploads:/var/www/uploads
  environment:
    # Small variable to tell if we are in production,testing or development
    # Don't use this in your code unless this is only option
    # We want to nearly identical codebase in production and development
    WP_ENV: development

    WP_UID: 1000
    WP_GID: 1001

    # Set php to use redis for object cache & sessions
    PHP_SESSION_HANDLER: redis
    PHP_SESSION_REDIS_DB: 0
    WP_REDIS_DATABASE: 1

    # These will be mapped automatically in development to jwilder/nginx-proxy
    VIRTUAL_HOST:  wordpress.test

    # This creates https certificate automatically when using gdev
    HTTPS_HOST: wordpress.test

    # Set project WP_SITEURL & HOME
    WP_SITEURL: https://wordpress.test
    WP_HOME: https://wordpress.test

    # Mysql details
    MYSQL_DATABASE: wordpress
    MYSQL_USER: wordpress
    MYSQL_PWD: wordpress

    # Mail settings
    SMTP_FROM: no-reply@wordpress.test
    # This will use local mail.test server
    SMTP_HOST: 172.17.0.1

##
# Use basic mariadb container for database
##
db:
  image: mariadb
  volumes:
    # Make database persistent
    - /var/lib/mysql
  environment:
    MYSQL_DATABASE: wordpress
    MYSQL_USER: wordpress
    MYSQL_PASSWORD: wordpress
    MYSQL_ROOT_PASSWORD: root

##
# Use elasticpress plugin and elasticsearch for quicker WP_Queries in WordPress
##
elasticsearch:
  image: elasticsearch
  volumes:
    # Make elasticsearch persistent
    - /usr/share/elasticsearch/data

##
# We use redis for wp object cache and php sessions
##
redis:
  image: redis
